&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Функция РассчитатьСумму(Количество, Цена)
	// Функция для расчета суммы (Количество * Цена)
	Если ЗначениеЗаполнено(Количество) и ЗначениеЗаполнено(Цена) Тогда
		Возврат Количество * Цена;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция РассчитатьСуммуВсего(Сумма, СуммаДопРасходы)
	// Функция для расчета суммы всего (Сумма + СуммаДопРасходы)
	Если ЗначениеЗаполнено(Сумма) и ЗначениеЗаполнено(СуммаДопРасходы) Тогда
		Возврат Сумма + СуммаДопРасходы;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОбновитьРассчеты(Элемент)
	// Получаем строку табличной части
	Строка = Элемент.Родитель.ТекущиеДанные;
	
	// Получаем значения полей
	Количество = Строка.Количество;
	Цена = Строка.Цена;
	СуммаДопРасходы = Строка.СуммаДопРасходы;
	
	// Рассчитываем сумму
	Строка.Сумма = РассчитатьСумму(Количество, Цена);
	
	// Рассчитываем сумму всего
	Строка.СуммаВсего = РассчитатьСуммуВсего(Строка.Сумма, СуммаДопРасходы);
	
	// Обновляем отображение
	Элемент.Родитель.ТекущиеДанные.Сумма = Строка.Сумма;
	Элемент.Родитель.ТекущиеДанные.СуммаВсего = Строка.СуммаВсего;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	// При изменении количества пересчитываем сумму и сумму всего
	ОбновитьРассчеты(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	// При изменении цены пересчитываем сумму и сумму всего
	ОбновитьРассчеты(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаДопРасходыПриИзменении(Элемент)
	// При изменении суммы доп расходов пересчитываем сумму всего
	Строка = Элемент.Родитель.ТекущиеДанные;
	Строка.СуммаВсего = РассчитатьСуммуВсего(Строка.Сумма, Строка.СуммаДопРасходы);
	Элемент.Родитель.ТекущиеДанные.СуммаВсего = Строка.СуммаВсего;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаВсегоПриИзменении(Элемент)
	// При изменении суммы всего, не выполняем никаких действий
	// так как это поле должно рассчитываться, а не изменяться вручную
	// Можно добавить предупреждение или сброс значения
	Сообщить("Поле СуммаВсего рассчитывается автоматически и не должно изменяться вручную.");
	ОбновитьРассчеты(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ВвестиДопРасходы(Команда)
    // Показываем диалог для ввода дополнительного расхода
    Оповещение = Новый ОписаниеОповещения("ПослеВводаДопРасходов", ЭтотОбъект);
    ПоказатьВводЧисла(Оповещение, , "Введите сумму дополнительного расхода", 10, 2);
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДопРасходов(Сумма, Параметры) Экспорт
    // Обрабатываем введенную сумму дополнительного расхода
    Если Сумма <> Неопределено Тогда
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция РаспределитьПропорционально(МассивКоэффициентов, Сумма, КоличествоЗнаков = 2)
    // Функция для пропорционального распределения суммы по базе
    // Параметры:
    // - МассивКоэффициентов: Массив с коэффициентами баз распределения
    // - Сумма: Сумма для распределения
    // - КоличествоЗнаков: Количество знаков после запятой для округления (по умолчанию 2)
    
    // Проверяем входные параметры
    Если МассивКоэффициентов.Количество() = 0 ИЛИ Сумма = Неопределено ИЛИ Сумма <= 0 Тогда
        Возврат Неопределено;
    КонецЕсли;
    
    // Суммируем все коэффициенты
    СуммаКоэффициентов = 0;
    Для Каждого Коэффициент Из МассивКоэффициентов Цикл
        Если Коэффициент = Неопределено ИЛИ Коэффициент <= 0 Тогда
            Продолжить;
        КонецЕсли;
        СуммаКоэффициентов = СуммаКоэффициентов + Коэффициент;
    КонецЦикла;
    
    Если СуммаКоэффициентов = 0 Тогда
        Возврат Неопределено;
    КонецЕсли;
    
    // Создаем массив для результатов распределения
    МассивРаспределения = Новый Массив;
    Остаток = 0;
    
    // Распределяем сумму пропорционально коэффициентам
    Для Каждого Коэффициент Из МассивКоэффициентов Цикл
        Если Коэффициент = Неопределено ИЛИ Коэффициент <= 0 Тогда
            Продолжить;
        КонецЕсли;
        
        // Рассчитываем долю
        Доля = Коэффициент / СуммаКоэффициентов;
        Значение = Окр(Сумма * Доля, КоличествоЗнаков);
        
        // Добавляем значение в массив
        МассивРаспределения.Добавить(Значение);
        
        // Вычисляем остаток для точного распределения
        Остаток = Остаток + (Сумма * Доля - Значение);
    КонецЦикла;
    
    // Распределяем остаток по элементам с наибольшими значениями
    Пока Остаток > 0.01 Цикл
        Если МассивРаспределения.Количество() = 0 Тогда
            Прервать;
        КонецЕсли;
        
        // Находим индекс максимального значения
        ИндексМаксимума = 0;
        МаксЗначение = МассивРаспределения[0];
        Для Индекс = 1 По МассивРаспределения.Количество() - 1 Цикл
            Если МассивРаспределения[Индекс] > МаксЗначение Тогда
                МаксЗначение = МассивРаспределения[Индекс];
                ИндексМаксимума = Индекс;
            КонецЕсли;
        КонецЦикла;
        
        // Добавляем 1 к максимальному значению и уменьшаем остаток
        Если Остаток >= 1 Тогда
            МассивРаспределения[ИндексМаксимума] = МассивРаспределения[ИндексМаксимума] + 1;
            Остаток = Остаток - 1;
        Иначе
            МассивРаспределения[ИндексМаксимума] = МассивРаспределения[ИндексМаксимума] - 1;
            Остаток = Остаток + 1;
        КонецЕсли;
    КонецЦикла;
    
    Возврат МассивРаспределения;
КонецФункции
