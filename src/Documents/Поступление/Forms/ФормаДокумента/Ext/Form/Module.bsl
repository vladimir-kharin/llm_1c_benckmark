
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Добавляем реквизиты
	ДобавитьРеквизитыНаФорму();
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыНаФорму()
	// Создаем массив для новых реквизитов
	РеквизитыФормы = Новый Массив;
	
	// Добавляем реквизит в табличную часть Товары
	РеквизитыФормы.Добавить(
		Новый РеквизитФормы(
			"СуммаВсегоРегл", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)),
			"Объект.Товары"
		)
	);
	
	// Добавляем общий реквизит формы
	РеквизитыФормы.Добавить(
		Новый РеквизитФормы(
			"ОбщаяСуммаВсегоРегл", 
			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2))
		)
	);
	
	// Применяем все реквизиты
	ИзменитьРеквизиты(РеквизитыФормы);
	
	// Создаем поле в табличной части
	ЭлементТаблицы = Элементы.Добавить(
		"ТоварыСуммаВсегоРегл", 
		Тип("ПолеФормы"), 
		Элементы.Товары
	);
	ЭлементТаблицы.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементТаблицы.Заголовок = "Сумма всего (регламент)";
	ЭлементТаблицы.ПутьКДанным = "Объект.Товары.СуммаВсегоРегл";
	ЭлементТаблицы.Формат = "ЧЦ=15; ЧДЦ=2; ЧНС=;";
	
	// Создаем поле итогов
	ЭлементИтоги = Элементы.Добавить(
		"ОбщаяСуммаВсегоРегл", 
		Тип("ПолеФормы"), 
		Элементы.ГруппаИтоги
	);
	ЭлементИтоги.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементИтоги.Заголовок = "Общая сумма всего (регламент)";
	ЭлементИтоги.ПутьКДанным = "ОбщаяСуммаВсегоРегл";
	ЭлементИтоги.Формат = "ЧЦ=15; ЧДЦ=2; ЧНС=;";
КонецПроцедуры

&НаКлиенте
Процедура ВвестиДопРасходы(Команда)
	Оповещение = Новый ОписаниеОповещения(
		"ОбработчикВводаДопРасходов", 
		ЭтотОбъект
	);
	
	// Параметры: оповещение, начальное значение, заголовок, длина числа, точность
	ПоказатьВводЧисла(
		Оповещение,
		0,
		"Ввод дополнительных расходов",
		15, // максимальная длина числа
		2   // 2 знака после запятой
	);
КонецПроцедуры

&НаКлиенте
Функция РаспределитьСуммуПоБазе(Знач БазаРаспределения, Знач Сумма, Знач Точность = 2)
    
    Если Не ЗначениеЗаполнено(БазаРаспределения) Или БазаРаспределения.Количество() = 0 Тогда
        Возврат Неопределено;
    КонецЕсли;
    
    // Фильтруем базу - только положительные значения
    ФильтрованнаяБаза = Новый Массив;
    Для каждого Коэфф Из БазаРаспределения Цикл
        Если Коэфф > 0 Тогда
            ФильтрованнаяБаза.Добавить(Коэфф);
        КонецЕсли;
    КонецЦикла;
    
    Если ФильтрованнаяБаза.Количество() = 0 Тогда
        Возврат Неопределено;
    КонецЕсли;
    
    ОбщаяБаза = 0;
    Для каждого Коэфф Из ФильтрованнаяБаза Цикл
        ОбщаяБаза = ОбщаяБаза + Коэфф;
    КонецЦикла;
    
    Если ОбщаяБаза <= 0 Тогда
        Возврат Неопределено;
    КонецЕсли;
    
    Результат = Новый Массив;
    Остаток = Сумма;
    
    Для i = 0 По ФильтрованнаяБаза.Количество() - 1 Цикл
        Доля = Сумма * ФильтрованнаяБаза[i] / ОбщаяБаза;
        ОкругленнаяЧасть = Окр(Доля, Точность);
        
        Если i = ФильтрованнаяБаза.Количество() - 1 Тогда
            // Последний элемент получает остаток с контролем точности
            ОкругленнаяЧасть = Окр(Остаток, Точность);
        Иначе
            // Корректируем остаток с учетом округления
            Остаток = Остаток - ОкругленнаяЧасть;
        КонецЕсли;
        
        Результат.Добавить(ОкругленнаяЧасть);
    КонецЦикла;
    
    Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ОбработчикВводаДопРасходов(Результат, Параметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Товары.Количество() = 0 Тогда
		Предупреждение("Нет товаров для распределения расходов!");
		Возврат;
	КонецЕсли;
	
	ОбщаяСумма = Объект.Товары.Итог("Сумма");
	Если ОбщаяСумма <= 0 Тогда
		Предупреждение("Общая сумма товаров должна быть больше нуля!");
		Возврат;
	КонецЕсли;
	
	// Формируем базу распределения вручную
	БазаРаспределения = Новый Массив;
	Для каждого СтрокаТовара Из Объект.Товары Цикл
		БазаРаспределения.Добавить(СтрокаТовара.Сумма);
	КонецЦикла;
	
	РаспределенныеСуммы = РаспределитьСуммуПоБазе(БазаРаспределения, Результат, 2);
	
	Если Не ЗначениеЗаполнено(РаспределенныеСуммы) Тогда
		Предупреждение("Ошибка распределения суммы!");
		Возврат;
	ИначеЕсли РаспределенныеСуммы.Количество() <> Объект.Товары.Количество() Тогда
		Предупреждение("Количество распределенных сумм не совпадает с количеством товаров!");
		Возврат;
	КонецЕсли;
	
	Для i = 0 По Объект.Товары.Количество() - 1 Цикл
		СтрокаТовара = Объект.Товары[i];
		СтрокаТовара.СуммаДопРасходы = РаспределенныеСуммы[i];
	КонецЦикла;
	
	Элементы.Товары.Обновить();
	Сообщить("Дополнительные расходы распределены на сумму: " + Результат);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТекущаяСтрока = Элемент.Родитель.ТекущиеДанные;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
	ТекущаяСтрока.СуммаВсего = ТекущаяСтрока.Сумма + ТекущаяСтрока.СуммаДопРасходы;
	ТекущаяСтрока.СуммаВсегоРегл = Окр(ТекущаяСтрока.СуммаВсего, 2);
	ОбновитьОбщиеСуммыРегл();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	ТекущаяСтрока = Элемент.Родитель.ТекущиеДанные;
	ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
	ТекущаяСтрока.СуммаВсего = ТекущаяСтрока.Сумма + ТекущаяСтрока.СуммаДопРасходы;
	ТекущаяСтрока.СуммаВсегоРегл = Окр(ТекущаяСтрока.СуммаВсего, 2);
	ОбновитьОбщиеСуммыРегл();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаДопРасходыПриИзменении(Элемент)
	ТекущаяСтрока = Элемент.Родитель.ТекущиеДанные;
	ТекущаяСтрока.СуммаВсего = ТекущаяСтрока.Сумма + ТекущаяСтрока.СуммаДопРасходы;
	ТекущаяСтрока.СуммаВсегоРегл = Окр(ТекущаяСтрока.СуммаВсего, 2);
	ОбновитьОбщиеСуммыРегл();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаВсегоПриИзменении(Элемент)
	ТекущаяСтрока = Элемент.Родитель.ТекущиеДанные;
	ТекущаяСтрока.СуммаВсегоРегл = Окр(ТекущаяСтрока.СуммаВсего, 2);
	ОбновитьОбщиеСуммыРегл();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОбщиеСуммыРегл()
	ОбщаяСумма = Объект.Товары.Итог("СуммаВсегоРегл");
	Объект.ОбщаяСуммаВсегоРегл = Окр(ОбщаяСумма, 2);
	Элементы.ОбщаяСуммаВсегоРегл.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры
